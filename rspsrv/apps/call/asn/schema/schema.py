# Auto-generated by asn1ate v.__ from schema.asn
# (last modified on 2019-01-15 15:40:33.625288)

from pyasn1.type import univ, char, namedtype, namedval, tag, constraint, useful


class IP_value(univ.Choice):
    pass


IP_value.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iPBinaryAddress', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 16)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.NamedType('iPTextAddress', char.IA5String().subtype(subtypeSpec=constraint.ValueSizeConstraint(7, 45)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))
)


class IPAddress(univ.Sequence):
    pass


IPAddress.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iP-type', univ.Enumerated(namedValues=namedval.NamedValues(('iPV4', 0), ('iPV6', 1))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.NamedType('iP-value', IP_value().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2))),
    namedtype.OptionalNamedType('iP-assignment', univ.Enumerated(namedValues=namedval.NamedValues(('static', 1), ('dynamic', 2), ('notKnown', 3))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3)))
)


class ADSLLocation(univ.Sequence):
    pass


ADSLLocation.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('lineNumber', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 25)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('ipAddress', IPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2))),
    namedtype.OptionalNamedType('macAddress', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 50)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.NamedType('movement', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 25)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4)))
)


class Network_Element_Identifier(univ.Choice):
    pass


Network_Element_Identifier.componentType = namedtype.NamedTypes(
    namedtype.NamedType('e164-Format', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 25)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.NamedType('x25-Format', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 25)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.NamedType('iP-Format', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 25)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.NamedType('dNS-Format', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 25)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.NamedType('iP-Address', IPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 5)))
)


class Network_Identifier(univ.Sequence):
    pass


Network_Identifier.componentType = namedtype.NamedTypes(
    namedtype.NamedType('operator-Identifier', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 32)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.OptionalNamedType('network-Element-Identifier', Network_Element_Identifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1)))
)


class CommunicationIdentifier(univ.Sequence):
    pass


CommunicationIdentifier.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('communication-Identity-Number', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('network-Identifier', Network_Identifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1)))
)


class LawfulInterceptionIdentifier(univ.OctetString):
    pass


LawfulInterceptionIdentifier.subtypeSpec = constraint.ValueSizeConstraint(1, 25)


class LocalTimeStamp(univ.Sequence):
    pass


LocalTimeStamp.componentType = namedtype.NamedTypes(
    namedtype.NamedType('generalizedTime', useful.GeneralizedTime().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0)))
)


class TimeStamp(univ.Choice):
    pass


TimeStamp.componentType = namedtype.NamedTypes(
    namedtype.NamedType('localTime', LocalTimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))),
    namedtype.NamedType('utcTime', useful.UTCTime().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))
)


class Location(univ.Sequence):
    pass


Location.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('adslLocation', ADSLLocation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 100)))
)


class Standard_Supplementary_Services(univ.Sequence):
    pass


Standard_Supplementary_Services.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('iSUP-SS-parameters', univ.SetOf(componentType=univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 256))).subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 256)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('dSS1-SS-Invoke-components', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 256)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7)))
)


class Supplementary_Services(univ.Sequence):
    pass


Supplementary_Services.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('standard-Supplementary-Services', Standard_Supplementary_Services().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1)))
)


class PartyInformation(univ.Sequence):
    pass


PartyInformation.componentType = namedtype.NamedTypes(
    namedtype.NamedType('party-Qualifier', univ.Enumerated(namedValues=namedval.NamedValues(('originating-Party', 0), ('terminating-Party', 1), ('forwarded-to-Party', 2), ('gPRS-Target', 3))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('partyIdentity', univ.Sequence(componentType=namedtype.NamedTypes(
        namedtype.OptionalNamedType('e164-Format', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 25)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
        namedtype.OptionalNamedType('sip-uri', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8)))
    ))
    .subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))),
    namedtype.OptionalNamedType('supplementary-Services-Information', Supplementary_Services().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 3)))
)


class Intercepted_Call_State(univ.Enumerated):
    pass


Intercepted_Call_State.namedValues = namedval.NamedValues(
    ('idle', 1),
    ('setUpInProcees', 2),
    ('connected', 3)
)


class IRI_Parameters(univ.Sequence):
    pass


IRI_Parameters.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('iRIversion', univ.Enumerated(namedValues=namedval.NamedValues(('version2', 2), ('version3', 3), ('version4', 4))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 23))),
    namedtype.NamedType('lawfulInterceptionIdentifier', LawfulInterceptionIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.NamedType('communicationIdentifier', CommunicationIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2))),
    namedtype.NamedType('timeStamp', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 3))),
    namedtype.OptionalNamedType('intercepted-Call-Direct', univ.Enumerated(namedValues=namedval.NamedValues(('not-Available', 0), ('originating-Target', 1), ('terminating-Target', 2))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('intercepted-Call-State', Intercepted_Call_State().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('conversationDuration', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(3, 3)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('locationOfTheTarget', Location().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 8))),
    namedtype.OptionalNamedType('partyInformation', univ.SetOf(componentType=PartyInformation()).subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 10)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9))),
    namedtype.OptionalNamedType('nature-Of-The-intercepted-call', univ.Enumerated(namedValues=namedval.NamedValues(('gSM-ISDN-PSTN-circuit-call', 0), ('gSM-SMS-Message', 1), ('uUS4-Messages', 2), ('tETRA-circuit-call', 3), ('teTRA-Packet-Data', 4), ('gPRS-Packet-Data', 5))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.OptionalNamedType('release-Reason-Of-Intercepted-Call', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 64)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),
    namedtype.OptionalNamedType('g-notification', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 32)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 40)))
)


class IRIContent(univ.Choice):
    pass


IRIContent.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iRI-Begin-record', IRI_Parameters().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))),
    namedtype.NamedType('iRI-End-record', IRI_Parameters().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2))),
    namedtype.NamedType('iRI-Continue-record', IRI_Parameters().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 3))),
    namedtype.NamedType('iRI-Report-record', IRI_Parameters().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4)))
)


class IRISequence(univ.SequenceOf):
    pass


IRISequence.componentType = IRIContent()


class IRIsContent(univ.Choice):
    pass


IRIsContent.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iRIContent', IRIContent()),
    namedtype.NamedType('iRISequence', IRISequence())
)


